name: Android-Cmake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  ANDROID_SDK_PATH: /usr/local/lib/android/sdk
  NDK_BUILD_TYPE: arm64-v8a
  NDK_PATH: /usr/local/lib/android/sdk/ndk
  #NDK 最新的稳定版本 23.0.7599858
  NDK_VERSION: 23.0.7599858
  

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
     
    - name: Install NDK
      run: sudo ${{env.ANDROID_SDK_PATH}}/tools/bin/sdkmanager --install "ndk;${{env.NDK_VERSION}}" --channe 0
      
    - name: test Env
      run: ls ${{env.NDK_PATH}}
      
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build   -DANDROID_ABI=${{env.NDK_BUILD_TYPE}}   -DCMAKE_TOOLCHAIN_FILE=${{NDK_PATH}}/${{NDK_VERSION}}/build/cmake/android.toolchain.cmake

          
    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build -DANDROID_ABI=${{env.NDK_BUILD_TYPE}} 
      
    - name: Pack artifact
      uses: actions/upload-artifact@v2
      with:
        name: ssocks
        path: ${{github.workspace}}/build
      
